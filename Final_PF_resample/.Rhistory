# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
libraryZ(ggplot2)
library(ggplot2)
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
theme<-  theme_bw()+
theme(panel.grid=element_blank(), legend.position = c(0.55,0.05), legend.direction = "horizontal", legend.key.size=unit(0.3,'cm'),
legend.text = element_text(size=8), legend.title = element_text(size=8), # legend.position = "none", panel.border = element_blank(),
title = element_text(size=14), text = element_text(size=8, colour="black"), ## family = 'Times_New_Roman',face='bold'
axis.ticks.length=unit(-0.05, "cm"), axis.title = element_text(size=14),
axis.text = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), size=8, colour="black"),
# plot.margin = margin(t = 0.2, r = 0.2, b = 0.2,l = 0.2, unit = "cm")
)
theme2 <- theme_bw()+
theme(panel.grid=element_blank(), panel.border = element_blank(), axis.line = element_line(colour="black"),
# legend.text = element_text(size=8), legend.title = element_text(size=8), legend.position = "none",
axis.ticks.length=unit(-0.05, "cm"), axis.title = element_blank(),
axis.text = element_text(colour="black", size=8),
title = element_text(size=7)) # margin=unit(c(0.5,0.5,0.5,0.5), "cm"),
# slope_pfChina.1
# Min.         -0.2142857
# 1st Qu.       0.0000000
# Median        0.0000000
# 3rd Qu.       0.0000000
# Max.          0.2142857
# NA's          0.0000000
# test_spdf <- as(raster(slope_pfChinaPj)[[1]]*(-1/95), "SpatialPixelsDataFrame") # slope_pfChina
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=20, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
summary(test_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -0.152044  0.000000  0.000000  0.003034  0.000000  0.214286
p<-1000 # 10, 100, 500, 1000
test_df$log_value<-ifelse(test_df$value>0,log10(1+test_df$value*p),-log10(1-test_df$value*p)) # log, log2
summary(test_df$log_value)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# -2.1848  0.0000  0.0000  0.0884  0.0000  2.3330
summary(test_df$x)
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3349057 -1486133   -70465   -70326  1348283  3196580
summary(test_df$y)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 1865367 2823003 3777559 3853055 4848355 6141625
slope.pfChina <- ggplot() +
geom_tile(data = test_df, aes(x = x, y = y, fill = log_value)) + # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area * 10"^3,") (km"^2," yr"^-1,")")))+
geom_sf(data = china2, color="black", fill=NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test_df2[test_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_discrete(limits=seq(75, 130, 10))+ # scale_x_discrete(limits=factor(seq(70, 135, 10)))+ # labels=
# scale_y_discrete(limits=factor(seq(15, 55, 10)))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("First derivative"))
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope.pfChina
# slope2_pfChina.1
# Min.          -0.7095474
# 1st Qu.        0.0000000
# Median         0.0000000
# 3rd Qu.        0.0000000
# Max.           0.9666551
# NA's         886.0000000
test2_spdf <- as(slope2_pfChinaPj[[1]]*(-1/95)*2, "SpatialPixelsDataFrame") # test2_spdf <- as(raster(slope2_pfChinaPj[[1]])*(-1/95)*2, "SpatialPixelsDataFrame") # slope2_pfChina
test2_df <- as.data.frame(test2_spdf)
colnames(test2_df) <- c("value", "x", "y")
ras2_<-is.na(slope2_pfChinaPj[[2]])==FALSE # ras2_<-is.na(raster(slope2_pfChinaPj[[2]]))==FALSE # slope2_pfChina
plot(ras2_)
ras2_2<-aggregate(ras2_, fact=1, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_>0.5)) # test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
ras2_2<-aggregate(ras2_, fact=20, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_>0.5)) # test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
ras2_2<-aggregate(ras2_, fact=1, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
ras2_2<-aggregate(ras2_, fact=1, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
ras2_2<-aggregate(ras2_, fact=10, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
ras2_2<-aggregate(ras2_, fact=2, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
te(ras2_, fact=2, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
ras2_2<-aggregate(ras2_, fact=2, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
test2_spdf <- as(slope2_pfChinaPj[[1]]*(-1/95)*2, "SpatialPixelsDataFrame") # test2_spdf <- as(raster(slope2_pfChinaPj[[1]])*(-1/95)*2, "SpatialPixelsDataFrame") # slope2_pfChina
test2_df <- as.data.frame(test2_spdf)
colnames(test2_df) <- c("value", "x", "y")
ras2_<-is.na(slope2_pfChinaPj[[2]])==FALSE # ras2_<-is.na(raster(slope2_pfChinaPj[[2]]))==FALSE # slope2_pfChina
plot(ras2_)
ras2_2<-aggregate(ras2_, fact=2, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -1.169206  0.000000  0.000000  0.007864  0.000000  1.195017
p<-1000 # 10, 100, 500, 1000
test2_df$log_value<-ifelse(test2_df$value>0,log10(1+test2_df$value*p),-log10(1-test2_df$value*p)) # log, log2
summary(test2_df$log_value) # more distinguished color
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.06826  0.00000  0.00000  0.08209  0.00000  3.07774
slope2.pfChina <- ggplot() +
geom_tile(data = test2_df, aes(x = x, y = y, fill = log_value)) + # fill = log_value # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area change * 10"^3,") (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in area change (km"^2," yr"^-2,")")))+ # name=expression(paste("Trend in log"[10], " (area * 10"^3,") (km"^2," yr"^-2,")")))+
geom_sf(data = china2, color="black", fill = NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test2_df2[test2_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_continuous(limits=seq(75, 135, 10))+ # scale_x_discrete(limits=seq(70, 135, 10))+
# scale_y_discrete(limits=seq(15, 55, 10))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("Second derivative")) # "First derivative"
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope2.pfChina
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=20, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
summary(test_df$value)
p<-1000 # 10, 100, 500, 1000
test_df$log_value<-ifelse(test_df$value>0,log10(1+test_df$value*p),-log10(1-test_df$value*p)) # log, log2
summary(test_df$log_value)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# -2.1848  0.0000  0.0000  0.0884  0.0000  2.3330
summary(test_df$x)
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3349057 -1486133   -70465   -70326  1348283  3196580
summary(test_df$y)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 1865367 2823003 3777559 3853055 4848355 6141625
slope.pfChina <- ggplot() +
geom_tile(data = test_df, aes(x = x, y = y, fill = log_value)) + # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area * 10"^3,") (km"^2," yr"^-1,")")))+
geom_sf(data = china2, color="black", fill=NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test_df2[test_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_discrete(limits=seq(75, 130, 10))+ # scale_x_discrete(limits=factor(seq(70, 135, 10)))+ # labels=
# scale_y_discrete(limits=factor(seq(15, 55, 10)))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("First derivative"))
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope.pfChina
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=10, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
summary(test_df$value)
# Min.   1st Qu.    Median      Mean   3rd Qu.      Max.
# -0.152044  0.000000  0.000000  0.003034  0.000000  0.214286
p<-1000 # 10, 100, 500, 1000
test_df$log_value<-ifelse(test_df$value>0,log10(1+test_df$value*p),-log10(1-test_df$value*p)) # log, log2
summary(test_df$log_value)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# -2.1848  0.0000  0.0000  0.0884  0.0000  2.3330
summary(test_df$x)
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3349057 -1486133   -70465   -70326  1348283  3196580
summary(test_df$y)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 1865367 2823003 3777559 3853055 4848355 6141625
slope.pfChina <- ggplot() +
geom_tile(data = test_df, aes(x = x, y = y, fill = log_value)) + # fill = value
scale_fill_gradient2(low="red", high="blue", na.value = "White", # limits = c(-3.3,3.3), # limits = c(-1, 1), # mid = "#FFFFFF", midpoint = 0, breaks = seq(-0.4,0.4,0.01),
name=expression(paste("Trend in log"[10], " (1 + area * 10"^3,") (km"^2," yr"^-1,")")))+
geom_sf(data = china2, color="black", fill=NA)+ # geom_sf(data = china[china$ADCODE99==230000|china$ADCODE99==150000|china$ADCODE99==220000|china$ADCODE99==210000
#                      |china$ADCODE99==130000|china$ADCODE99==610000|china$ADCODE99==140000,], fill = NA)+
geom_point(data = test_df2[test_df2$layer==1,], aes(x = x, y = y, fill = layer), size=0.2) +
coord_sf(xlim=c(-3*10^6, 3*10^6), ylim=c(1.5*10^6, 6*10^6))+ # coord_sf(xlim=c(73, 135), ylim=c(15, 55))+
# scale_x_discrete(limits=seq(75, 130, 10))+ # scale_x_discrete(limits=factor(seq(70, 135, 10)))+ # labels=
# scale_y_discrete(limits=factor(seq(15, 55, 10)))+
labs(x ="Longitude",y="Latitude", # x ='Longitude (°E)',y="Latitude (°N)",
# title = expression(paste("First derivative"))
)+ #,subtitle = "land use data",caption = 'Visualization by DataCharm'
theme
slope.pfChina
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=5, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
test2_spdf <- as(slope2_pfChinaPj[[1]]*(-1/95)*2, "SpatialPixelsDataFrame") # test2_spdf <- as(raster(slope2_pfChinaPj[[1]])*(-1/95)*2, "SpatialPixelsDataFrame") # slope2_pfChina
test2_df <- as.data.frame(test2_spdf)
colnames(test2_df) <- c("value", "x", "y")
ras2_<-is.na(slope2_pfChinaPj[[2]])==FALSE # ras2_<-is.na(raster(slope2_pfChinaPj[[2]]))==FALSE # slope2_pfChina
plot(ras2_)
ras2_2<-aggregate(ras2_, fact=5, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test2_spdf <- as(slope2_pfChinaPj[[1]]*(-1/95)*2, "SpatialPixelsDataFrame") # test2_spdf <- as(raster(slope2_pfChinaPj[[1]])*(-1/95)*2, "SpatialPixelsDataFrame") # slope2_pfChina
test2_df <- as.data.frame(test2_spdf)
colnames(test2_df) <- c("value", "x", "y")
ras2_<-is.na(slope2_pfChinaPj[[2]])==FALSE # ras2_<-is.na(raster(slope2_pfChinaPj[[2]]))==FALSE # slope2_pfChina
plot(ras2_)
ras2_2<-aggregate(ras2_, fact=2, fun=mean) # ras2_2<-aggregate(ras2_, fact=50, fun=mean) # 70
plot(ras2_2>0.5)
test2_df2<-as.data.frame(rasterToPoints(ras2_2>0.5))
hist(test2_df2$layer)
summary(test2_df$value)
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=20, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=10, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
summary(test_df$value)
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1.csv") # test_df2Ag_layersIs1.csv
write.csv(test2_df2[test2_df2$layer==1,], "Z:/ck/xc/Plantation/test2_df2Pj_layersIs1.csv") # test2_df2Ag_layersIs1.csv
test_spdf <- as(slope_pfChinaPj[[1]]*(-1/95), "SpatialPixelsDataFrame")
test_df <- as.data.frame(test_spdf)
colnames(test_df) <- c("value", "x", "y")
ras<-is.na(slope_pfChinaPj[[2]])==FALSE # ras<-is.na(raster(slope_pfChinaPj[[2]]))==FALSE # slope_pfChina
plot(ras)
ras2<-aggregate(ras, fact=5, fun=mean) # 70
plot(ras2>0.5)
test_df2<-as.data.frame(rasterToPoints(ras2>0.5)) # ras>0.5 # test_df2<-as.data.frame(rasterToPoints(ras2>0.5))
hist(test_df2$layer)
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
# spdf_data<-SpatialPointsDataFrame(coords = as.matrix(test2_df2[,1:2]), test2_df2,
#                                   proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")) #SpatialPointsDataFrame
# pix_data<-SpatialPixelsDataFrame(spdf_data, spdf_data@data)  # SpatialPixelsDataFrame # pix will be used later
# ras_data<-raster(pix_data[, "layer"]) # RasterLayer # 'slope_ndviProv2'
# writeRaster(ras_data, filename="Z:/ck/xc/Plantation/ras2_data.tif",
#             format="GTiff",  # specify output format - GeoTIFF
#             overwrite=TRUE, # CAUTION: if this is true, it will overwrite an existing file
#             NAflag=-9999) # set no data value to -9999
write.csv(test_df2[test_df2$layer==1,], "Z:/ck/xc/Plantation/test_df2Pj_layersIs1'.csv") # test_df2Ag_layersIs1.csv
